{"version":3,"sources":["styles/constants.ts","components/InfoIcon.tsx","components/BuildCost.tsx","components/BuildVariants.tsx","components/BuildIcon.tsx","hooks/useAdaptive.ts","ui-kit/Button.tsx","App.tsx","setupIcons.ts","serviceWorker.ts","index.tsx"],"names":["color","border","variant1","variant2","variant3","variant4","radius","shadow","screen","mediaQuery","mobile","desktop","Container","styled","div","theme","InfoIcon","icon","BuildVariant","Block","compact","Cost","CostIcon","CostContent","CostTitle","CostValue","CostCurrency","span","CostNumber","CostPrefix","CostOperation","TotalCost","TotalCostNumber","BuildCost","BuildIcon","className","xmlns","version","preserveAspectRatio","viewBox","width","height","stroke","strokeWidth","d","opacity","fill","fillOpacity","strokeOpacity","Variants","VariantBlock","VariantLabel","label","VariantIcon","VariantTitle","VariantRadioIcon","VariantRadio","input","Variant","id","name","value","checked","children","onChange","type","e","currentTarget","htmlFor","Tooltip","cursorOffset","getTooltipCursorLeft","TooltipTitle","h2","TooltipText","BuildVariants","useState","variant","setVariant","getCursorOffsetByVariant","useAdaptive","window","innerWidth","isMobile","setIsMobile","addEventListener","button","Icon","Button","tail","Form","form","Content","Title","h1","SubTitle","Footer","footer","Actions","App","library","add","faInfo","faCheck","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iPAAaA,EACF,UADEA,EAEF,UAFEA,EAGF,UAHEA,EAIF,UAJEA,EAKF,UALEA,EAMF,mBAGEC,EAAS,CAClBC,SAAU,+BACVC,SAAS,aAAD,OAAeH,GACvBI,SAAU,+BACVC,SAAS,aAAD,OAAeL,GACvBM,OAAQ,CACJJ,SAAU,SAILK,EACC,+BAGDC,EACD,IADCA,EAEA,IAGAC,EAAa,CACtBC,OAAO,sBAAD,OAAwBF,EAAiB,EAAzC,OACNG,QAAQ,sBAAD,OAAwBH,EAAxB,Q,0PCrBX,IAAMI,EAAYC,IAAOC,IAAV,KAKS,kBAAyB,SAAzB,EAAGC,MAA+Bf,EAAcA,KAE3D,kBAAyB,SAAzB,EAAGe,MAA+Bf,EAAcA,KAY9CgB,EARoB,SAAC,GAA2B,IAAD,IAAxBD,aAAwB,MAAhB,UAAgB,EAC1D,OACI,kBAACH,EAAD,CAAWG,MAAOA,GACd,kBAAC,IAAD,CAAiBE,KAAK,W,63CCdlC,ICJKC,EDICC,EAAQN,IAAOC,IAAV,KAGL,qBAAGM,QAAqB,+FAOxBC,EAAOR,IAAOC,IAAV,KAGJ,qBAAGM,QAAqB,+CAMxBE,EAAWT,IAAOC,IAAV,KACR,qBAAGM,QAAqB,6EAOxBG,EAAcV,IAAOC,IAAV,KACX,qBAAGM,QAAqB,iNAWxBI,EAAYX,IAAOC,IAAV,IACFd,GAEP,qBAAGoB,QAAqB,sGAQxBK,EAAYZ,IAAOC,IAAV,KAKT,qBAAGM,QAAqB,+IASxBM,EAAeb,IAAOc,KAAV,KAKZ,qBAAGP,QAAqB,2EAOxBQ,EAAaf,IAAOc,KAAV,KAKVE,EAAahB,IAAOc,KAAV,KAKVG,EAAgBjB,IAAOc,KAAV,IAGN3B,GAIP,qBAAGoB,QAAqB,iEAOxBW,EAAYlB,YAAOQ,EAAPR,CAAH,KAGT,qBAAGO,QAAqB,sPAcxBY,EAAkBnB,YAAOe,EAAPf,CAAH,KAkDNoB,EA9CqB,SAAC,GAAiB,IAAfb,EAAc,EAAdA,QACnC,OACI,kBAACD,EAAD,CAAOC,QAASA,GACZ,kBAACC,EAAD,CAAMD,QAASA,GACX,kBAACE,EAAD,CAAUF,QAASA,GACf,kBAAC,EAAD,CAAUL,MAAM,UAEpB,kBAACQ,EAAD,CAAaH,QAASA,GAClB,kBAACI,EAAD,CAAWJ,QAASA,GAApB,8BACA,kBAACK,EAAD,CAAWL,QAASA,GAChB,kBAACM,EAAD,CAAcN,QAASA,GAAvB,KACA,kBAACQ,EAAD,YACA,kBAACC,EAAD,yBAIZ,kBAACR,EAAD,CAAMD,QAASA,GACX,kBAACE,EAAD,CAAUF,QAASA,GACf,kBAAC,EAAD,CAAUL,MAAM,UAEpB,kBAACQ,EAAD,CAAaH,QAASA,GAClB,kBAACI,EAAD,CAAWJ,QAASA,GAApB,wBACA,kBAACK,EAAD,CAAWL,QAASA,GAChB,kBAACU,EAAD,CAAeV,QAASA,GAAxB,KACA,kBAACQ,EAAD,cACA,kBAACC,EAAD,oBAIZ,kBAACE,EAAD,CAAWX,QAASA,GAChB,kBAACE,EAAD,CAAUF,QAASA,GACf,kBAAC,EAAD,CAAUL,MAAM,UAEpB,kBAACQ,EAAD,CAAaH,QAASA,GAClB,kBAACI,EAAD,CAAWJ,QAASA,GAApB,qBACA,kBAACK,EAAD,CAAWL,QAASA,GAChB,kBAACU,EAAD,CAAeV,QAASA,GAAxB,KACA,kBAACM,EAAD,CAAcN,QAASA,GAAvB,KACA,kBAACY,EAAD,qB,OE/ETE,EAjFqB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAmC,IAAxBpB,aAAwB,MAAhB,UAAgB,EACtE,OACI,yBACIoB,UAAWA,EACXC,MAAM,6BACNC,QAAQ,MACRC,oBAAoB,gBACpBC,QAAQ,eACRC,MAAM,MACNC,OAAO,QACPC,OAAkB,SAAV3B,EAAmBf,EAAcA,GAEzC,uBAAG2C,YAAY,OACX,0BACIC,EAAE,qEACFC,QAAQ,IACRC,KAAgB,SAAV/B,EAAmBf,EAAcA,EACvC+C,YAAY,IACZL,OAAkB,SAAV3B,EAAmBf,EAAcA,EACzCgD,cAAc,MAElB,0BACIJ,EAAE,0BACFC,QAAQ,IACRE,YAAY,IACZL,OAAkB,SAAV3B,EAAmBf,EAAcA,EACzCgD,cAAc,MAElB,0BACIJ,EAAE,uDACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,MAElB,0BACIJ,EAAE,wEACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,MAElB,0BACIJ,EAAE,uEACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,MAElB,0BACIJ,EAAE,6BACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,MAElB,0BACIJ,EAAE,wEACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,MAElB,0BACIJ,EAAE,4CACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,MAElB,0BACIJ,EAAE,6BACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,MAElB,0BACIJ,EAAE,6BACFC,QAAQ,IACRE,YAAY,IACZC,cAAc,S,kmFD7E7B9B,K,oBAAAA,E,oBAAAA,E,qBAAAA,M,KAgDL,IAAMC,GAAQN,IAAOC,IAAV,MAELmC,GAAWpC,IAAOC,IAAV,MAGC,qBAAGM,QAAyB,SAAW,YAGhD8B,GAAerC,IAAOC,IAAV,MAIZqC,GAAetC,IAAOuC,MAAV,KAMJnD,EAAOC,SACAD,EAAOK,OAAOJ,UAI7B,qBAAGkB,QACM,mHAWTiC,GAAcxC,YAAoCqB,EAApCrB,CAAH,MACA,qBAAGO,QAAyB,MAAQ,WAG/CkC,GAAezC,IAAOC,IAAV,KAILd,GAEP,qBAAGoB,QACM,6HAWTmC,GAAmB1C,IAAOC,IAAV,KASMd,EASAA,GAKtB,qBAAGoB,QAAqB,yjBA+BxBoC,GAAe3C,IAAO4C,MAAV,KAIAN,GACAlD,EAAOE,SACHI,EAEZ+C,GAEWtD,EAGXuD,GAE0BvD,GAU9B0D,GAAmC,SAAC,GAQnC,IAPHC,EAOE,EAPFA,GACAC,EAME,EANFA,KACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,QACA1C,EAGE,EAHFA,QACA2C,EAEE,EAFFA,SACAC,EACE,EADFA,SAEA,OACI,kBAACd,GAAD,KACI,kBAACM,GAAD,CACIS,KAAK,QACLN,GAAIA,EACJC,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTE,SAAU,SAACE,GAAD,OACNF,EAASE,EAAEC,cAAcN,UAGjC,kBAACV,GAAD,CAAciB,QAAST,EAAIvC,QAASA,GAChC,kBAACiC,GAAD,CACIjC,QAASA,EACTL,MAAO+C,EAAU,OAAS,YAE9B,kBAACR,GAAD,CAAclC,QAASA,GAAU2C,GACjC,kBAACR,GAAD,CAAkBnC,QAASA,OASrCiD,GAAUxD,IAAOC,IAAV,KACKb,EAAOC,SACJD,EAAOC,UAKtB,qBAAGkB,QACM,2LASQnB,EAAOC,SATf,oCAUSD,EAAOC,SAVhB,qCAWUD,EAAOK,OAAOJ,SAXxB,6EAsBOD,EAAOC,SACND,EAAOC,UAGd,mBArCa,SAACoE,EAAsBlD,GAAvB,MAClB,UAAPA,EAAa,GAAoB,IAAfkD,EAA4B,IAAqB,IAAfA,EAA7C,MAoCoCC,CAA/B,EAAGD,aAAH,EAAiBlD,YAI3BoD,GAAe3D,IAAO4D,GAAV,KACD,qBAAGrD,QAAyB,QAAU,UAC1CpB,GAIP0E,GAAc7D,IAAOC,IAAV,IAGJd,GAuEE2E,GAnEyB,SAAC,GAAiB,IAAfvD,EAAc,EAAdA,QAAc,EACvBwD,mBAAuB1D,EAAahB,UADb,mBAC9C2E,EAD8C,KACrCC,EADqC,KAgBrD,OACI,kBAAC,GAAD,KACI,kBAAC7B,GAAD,CAAU7B,QAASA,GACf,kBAAC,GAAD,CACIuC,GAAG,kBACHC,KAAK,gBACLC,MAAO3C,EAAahB,SACpB4D,QAASe,IAAY3D,EAAahB,SAClCkB,QAASA,EACT4C,SAAUc,GANd,YAUA,kBAAC,GAAD,CACInB,GAAG,kBACHC,KAAK,gBACLC,MAAO3C,EAAaf,SACpB2D,QAASe,IAAY3D,EAAaf,SAClCiB,QAASA,EACT4C,SAAUc,GANd,YAUA,kBAAC,GAAD,CACInB,GAAG,kBACHC,KAAK,gBACLC,MAAO3C,EAAad,SACpB0D,QAASe,IAAY3D,EAAad,SAClCgB,QAASA,EACT4C,SAAUc,GANd,WAWJ,kBAACT,GAAD,CACIjD,QAASA,EACTkD,aAjDqB,SAACO,GAC9B,OAAQA,GACJ,KAAK3D,EAAahB,SACd,OAAO,EAEX,KAAKgB,EAAaf,SACd,OAAO,EAEX,KAAKe,EAAad,SACd,OAAO,GAwCO2E,CAAyBF,IAEvC,kBAACL,GAAD,CAAcpD,QAASA,GAAvB,8BAGA,kBAACsD,GAAD,4IExTDM,GAlBK,WAAO,IAAD,EACUJ,mBAC5BK,OAAOC,WAAa1E,GAFF,mBACf2E,EADe,KACLC,EADK,KAetB,OAVAH,OAAOI,iBAAiB,UAAU,YACzBF,GAAYF,OAAOC,WAAa1E,GACjC4E,GAAY,GAGZD,GAAYF,OAAOC,YAAc1E,GACjC4E,GAAY,MAIb,CAAED,a,oRCNb,IAAMhE,GAAQN,IAAOyE,OAAV,MAKL,kBAAyB,YAAzB,EAAGvE,MAAY,4BACHd,EAAOI,SADJ,wCAEOL,EAFP,8DAKHC,EAAOG,SALJ,+DAOJJ,EAPI,cAUf,qBAAGoB,QAAqB,+NAaxBmE,GAAO1E,IAAOc,KAAV,MAaK6D,GATkB,SAAC,GAAoD,IAAD,IAAjDzE,aAAiD,MAAzC,UAAyC,EAA9BE,EAA8B,EAA9BA,KAAM8C,EAAwB,EAAxBA,SAAa0B,EAAW,4CACjF,OACI,kBAAC,GAAD,eAAO1E,MAAOA,GAAW0E,GACpBxE,GAAQ,kBAACsE,GAAD,KAAM,kBAAC,IAAD,CAAiBtE,KAAMA,KACrC8C,I,k4CCxCb,IAAM2B,GAAO7E,IAAO8E,KAAV,KAGQpF,EAEZE,EAAWE,QACAH,EAIXC,EAAWC,OACAF,GAKXoF,GAAU/E,IAAOC,IAAV,KAEWd,EAGlBS,EAAWC,QAKXmF,GAAQhF,IAAOiF,GAAV,KAEE9F,EAIPS,EAAWC,QAKXqF,GAAWlF,IAAO4D,GAAV,KAGDzE,GAIPiD,GAAWpC,IAAOC,IAAV,KAGRL,EAAWC,QAKXsF,GAASnF,IAAOoF,OAAV,KAGMhG,EAAOC,SAEnBO,EAAWC,QAKXwF,GAAUrF,IAAOC,IAAV,KAKPL,EAAWC,QAqCFyF,GAhCO,WAAO,IACjBhB,EAAaH,KAAbG,SAER,OACI,kBAACO,GAAD,KACI,kBAACE,GAAD,KACI,kBAACC,GAAD,oCACA,kBAACE,GAAD,iDACA,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAe3E,QAAS+D,MAGhC,kBAACa,GAAD,KACI,kBAAC,EAAD,CAAW5E,QAAS+D,IACpB,kBAACe,GAAD,KACI,kBAAC,GAAD,CAAQjC,KAAK,QAAQ7C,QAAS+D,GAA9B,UAGA,kBAAC,GAAD,CACIlB,KAAK,SACLlD,MAAM,UACNE,KAAK,QACLG,QAAS+D,GAJb,oB,iBC/FpBiB,KAAQC,IAAIC,KAAQC,MCSAC,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f7405f06.chunk.js","sourcesContent":["export const color = {\r\n    grey1: \"#0a0c0e\",\r\n    grey2: \"#555a5e\",\r\n    grey3: \"#8d9193\",\r\n    grey4: \"#e9ebeb\",\r\n    milk1: \"#f9f8f4\",\r\n    blue1: \"rgb(87, 76, 250)\",\r\n};\r\n\r\nexport const border = {\r\n    variant1: \"2px solid rgb(223, 222, 209)\",\r\n    variant2: `3px solid ${color.blue1}`,\r\n    variant3: \"2px solid rgb(132, 132, 132)\",\r\n    variant4: `2px solid ${color.blue1}`,\r\n    radius: {\r\n        variant1: \"15px\",\r\n    },\r\n};\r\n\r\nexport const shadow = {\r\n    variant1: \"0 0 30px rgba(0, 0, 0, 0.15)\",\r\n};\r\n\r\nexport const screen = {\r\n    mobile: 560,\r\n    desktop: 960,\r\n};\r\n\r\nexport const mediaQuery = {\r\n    mobile: `@media (max-width: ${screen.desktop - 1}px)`,\r\n    desktop: `@media (min-width: ${screen.desktop}px)`,\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { color } from \"../styles/constants\";\r\n\r\ninterface IProps {\r\n    theme?: 'default' | 'blue';\r\n}\r\n\r\nconst Container = styled.div<IProps>`\r\n    width: 24px;\r\n    height: 24px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    border: 2px solid ${({ theme }) => theme === 'blue' ? color.blue1 : color.grey1};\r\n    border-radius: 50%;\r\n    color: ${({ theme }) => theme === 'blue' ? color.blue1 : color.grey1};\r\n    font-size: 0.8em;\r\n`;\r\n\r\nconst InfoIcon: React.FC<IProps> = ({ theme = 'default' }) => {\r\n    return (\r\n        <Container theme={theme}>\r\n            <FontAwesomeIcon icon=\"info\" />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default InfoIcon;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InfoIcon from \"../components/InfoIcon\";\r\nimport { color } from \"../styles/constants\";\r\n\r\ninterface IProps {\r\n    compact?: boolean;\r\n}\r\n\r\nconst Block = styled.div<IProps>`\r\n    display: flex;\r\n\r\n    ${({ compact }) => compact ? `\r\n        flex-direction: column;\r\n    ` : `\r\n        justify-content: space-between;\r\n    `}\r\n`;\r\n\r\nconst Cost = styled.div<IProps>`\r\n    display: flex;\r\n\r\n    ${({ compact }) => compact ? `\r\n        padding: 17px 0;\r\n    ` : `\r\n    `}\r\n`;\r\n\r\nconst CostIcon = styled.div<IProps>`\r\n    ${({ compact }) => compact ? `\r\n        display: flex;\r\n        align-items: flex-end;\r\n    ` : `\r\n    `}\r\n`;\r\n\r\nconst CostContent = styled.div<IProps>`\r\n    ${({ compact }) => compact ? `\r\n        display: flex;\r\n        align-items: flex-end;\r\n        justify-content: space-between;\r\n        width: calc(100% - 38px);\r\n        margin-left: 14px;\r\n    ` : `\r\n        margin-left: 10px;\r\n    `}\r\n`;\r\n\r\nconst CostTitle = styled.div<IProps>`\r\n    color: ${color.grey2};\r\n\r\n    ${({ compact }) => compact ? `\r\n        font-weight: 600;\r\n        font-size: 1.2em;\r\n    ` : `\r\n        font-size: 1.3em;\r\n    `}\r\n`;\r\n\r\nconst CostValue = styled.div<IProps>`\r\n    display: flex;\r\n    position: relative;\r\n    align-items: flex-end;\r\n\r\n    ${({ compact }) => compact ? `\r\n        width: 220px;\r\n        justify-content: flex-end;\r\n        padding: 0 20px 0 0;\r\n    ` : `\r\n        padding: 20px 0 0 15px;\r\n    `}\r\n`;\r\n\r\nconst CostCurrency = styled.span<IProps>`\r\n    font-weight: 700;\r\n    display: inline-block;\r\n    align-self: flex-start;\r\n\r\n    ${({ compact }) => compact ? `\r\n        font-size: 1.5em;\r\n    ` : `\r\n        font-size: 1.2em;\r\n    `}\r\n`;\r\n\r\nconst CostNumber = styled.span`\r\n    font-size: 2.4em;\r\n    line-height: 38px;\r\n`;\r\n\r\nconst CostPrefix = styled.span`\r\n    font-size: 1.3em;\r\n    margin-left: 5px;\r\n`;\r\n\r\nconst CostOperation = styled.span<IProps>`\r\n    position: absolute;\r\n    bottom: -5px;\r\n    color: ${color.grey2};\r\n    font-size: 2.5em;\r\n    font-weight: 700;\r\n\r\n    ${({ compact }) => compact ? `\r\n        left: -30px;\r\n    ` : `\r\n        left: -60px;\r\n    `}\r\n`;\r\n\r\nconst TotalCost = styled(Cost)`\r\n    position: relative;\r\n\r\n    ${({ compact }) => compact ? `\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            width: 50%;\r\n            height: 3px;\r\n            background-color: #e6e5db;\r\n            top: 0;\r\n            right: 0;\r\n        }\r\n    ` : `\r\n    `}\r\n`;\r\n\r\nconst TotalCostNumber = styled(CostNumber)`\r\n    font-weight: 600;\r\n`;\r\n\r\nconst BuildCost: React.FC<IProps> = ({ compact }) => {\r\n    return (\r\n        <Block compact={compact}>\r\n            <Cost compact={compact}>\r\n                <CostIcon compact={compact}>\r\n                    <InfoIcon theme=\"blue\" />\r\n                </CostIcon>\r\n                <CostContent compact={compact}>\r\n                    <CostTitle compact={compact}>U.S. avg. contractor cost:</CostTitle>\r\n                    <CostValue compact={compact}>\r\n                        <CostCurrency compact={compact}>$</CostCurrency>\r\n                        <CostNumber>150</CostNumber>\r\n                        <CostPrefix>/per sq. foot</CostPrefix>\r\n                    </CostValue>\r\n                </CostContent>\r\n            </Cost>\r\n            <Cost compact={compact}>\r\n                <CostIcon compact={compact}>\r\n                    <InfoIcon theme=\"blue\" />\r\n                </CostIcon>\r\n                <CostContent compact={compact}>\r\n                    <CostTitle compact={compact}>Your square footage:</CostTitle>\r\n                    <CostValue compact={compact}>\r\n                        <CostOperation compact={compact}>x</CostOperation>\r\n                        <CostNumber>1,720</CostNumber>\r\n                        <CostPrefix>sq. feet</CostPrefix>\r\n                    </CostValue>\r\n                </CostContent>\r\n            </Cost>\r\n            <TotalCost compact={compact}>\r\n                <CostIcon compact={compact}>\r\n                    <InfoIcon theme=\"blue\" />\r\n                </CostIcon>\r\n                <CostContent compact={compact}>\r\n                    <CostTitle compact={compact}>Rebuild estimate:</CostTitle>\r\n                    <CostValue compact={compact}>\r\n                        <CostOperation compact={compact}>=</CostOperation>\r\n                        <CostCurrency compact={compact}>$</CostCurrency>\r\n                        <TotalCostNumber>258,000</TotalCostNumber>\r\n                    </CostValue>\r\n                </CostContent>\r\n            </TotalCost>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default BuildCost;\r\n","import React, { ComponentProps, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BuildIcon from \"./BuildIcon\";\r\nimport { border, color, shadow } from \"../styles/constants\";\r\n\r\nenum BuildVariant {\r\n    variant1 = \"variant1\",\r\n    variant2 = \"variant2\",\r\n    variant3 = \"variant3\",\r\n}\r\n\r\ninterface IProps {\r\n    compact?: boolean;\r\n}\r\n\r\ninterface IVariantsProps {\r\n    compact?: boolean;\r\n}\r\n\r\ninterface IVariantProps {\r\n    id: string;\r\n    name: string;\r\n    value: BuildVariant;\r\n    checked: boolean;\r\n    compact?: boolean;\r\n    onChange: (newValue: BuildVariant) => void;\r\n}\r\n\r\ninterface IVariantLabelProps {\r\n    compact?: boolean;\r\n}\r\n\r\ninterface IVariantIconProps extends ComponentProps<typeof BuildIcon> {\r\n    compact?: boolean;\r\n}\r\n\r\ninterface IVariantTitleProps {\r\n    compact?: boolean;\r\n}\r\n\r\ninterface IVariantRadioIconProps {\r\n    compact?: boolean;\r\n}\r\n\r\ninterface ITooltipProps {\r\n    cursorOffset: number;\r\n    compact?: boolean;\r\n}\r\n\r\ninterface ITooltipTitleProps {\r\n    compact?: boolean;\r\n}\r\n\r\nconst Block = styled.div``;\r\n\r\nconst Variants = styled.div<IVariantsProps>`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: ${({ compact }) => (compact ? \"0 24px\" : \"0 96px\")};\r\n`;\r\n\r\nconst VariantBlock = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst VariantLabel = styled.label<IVariantLabelProps>`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-content: center;\r\n    justify-content: center;\r\n    font-size: 1.2em;\r\n    border: ${border.variant1};\r\n    border-radius: ${border.radius.variant1};\r\n    background-color: white;\r\n    cursor: pointer;\r\n\r\n    ${({ compact }) =>\r\n        compact\r\n            ? `\r\n        width: 162px;\r\n        height: 174px;\r\n    `\r\n            : `\r\n        width: 248px;\r\n        height: 260px;\r\n    `};\r\n`;\r\n\r\nconst VariantIcon = styled<React.FC<IVariantIconProps>>(BuildIcon)`\r\n    font-size: ${({ compact }) => (compact ? \"6em\" : \"6.4em\")};\r\n`;\r\n\r\nconst VariantTitle = styled.div<IVariantTitleProps>`\r\n    width: 100%;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    color: ${color.grey3};\r\n\r\n    ${({ compact }) =>\r\n        compact\r\n            ? `\r\n        font-size: 1.2em;\r\n        margin: 10px 0;\r\n    `\r\n            : `\r\n        font-size: 1.3em;\r\n        margin: 20px 0;\r\n    `};\r\n`;\r\n\r\nconst VariantRadioIcon = styled.div<IVariantRadioIconProps>`\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 2px solid ${color.grey4};\r\n        border-radius: 50%;\r\n    }\r\n\r\n    &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        background-color: ${color.blue1};\r\n        border-radius: 50%;\r\n        display: none;\r\n    }\r\n\r\n    ${({ compact }) => compact ? `\r\n        height: 22px;\r\n\r\n        &::before {\r\n            width: 22px;\r\n            height: 22px;\r\n            margin: -11px 0 0 -11px;\r\n        }\r\n    \r\n        &::after {\r\n            width: 12px;\r\n            height: 12px;\r\n            margin: -5px 0 0 -5px;\r\n        }\r\n    ` : `\r\n        height: 32px;\r\n\r\n        &::before {\r\n            width: 32px;\r\n            height: 32px;\r\n            margin: -16px 0 0 -16px;\r\n        }\r\n    \r\n        &::after {\r\n            width: 16px;\r\n            height: 16px;\r\n            margin: -7px 0 0 -7px;\r\n        }\r\n    `};\r\n`;\r\n\r\nconst VariantRadio = styled.input`\r\n    visibility: hidden;\r\n    position: absolute;\r\n\r\n    &:checked + ${VariantLabel} {\r\n        border: ${border.variant2};\r\n        box-shadow: ${shadow.variant1};\r\n\r\n        ${VariantTitle} {\r\n            font-weight: 600;\r\n            color: ${color.grey1};\r\n        }\r\n\r\n        ${VariantRadioIcon} {\r\n            &::before {\r\n                border: 1px solid ${color.blue1};\r\n            }\r\n\r\n            &::after {\r\n                display: block;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Variant: React.FC<IVariantProps> = ({\r\n    id,\r\n    name,\r\n    value,\r\n    checked,\r\n    compact,\r\n    children,\r\n    onChange,\r\n}) => {\r\n    return (\r\n        <VariantBlock>\r\n            <VariantRadio\r\n                type=\"radio\"\r\n                id={id}\r\n                name={name}\r\n                value={value}\r\n                checked={checked}\r\n                onChange={(e) =>\r\n                    onChange(e.currentTarget.value as BuildVariant)\r\n                }\r\n            />\r\n            <VariantLabel htmlFor={id} compact={compact}>\r\n                <VariantIcon\r\n                    compact={compact}\r\n                    theme={checked ? \"blue\" : \"default\"}\r\n                />\r\n                <VariantTitle compact={compact}>{children}</VariantTitle>\r\n                <VariantRadioIcon compact={compact} />\r\n            </VariantLabel>\r\n        </VariantBlock>\r\n    );\r\n};\r\n\r\nconst getTooltipCursorLeft = (cursorOffset: number, compact?: boolean) =>\r\n    compact ? `${91 + cursorOffset * 175}px` : `${108 + cursorOffset * 260}px`;\r\n\r\nconst Tooltip = styled.div<ITooltipProps>`\r\n    border-top: ${border.variant1};\r\n    border-bottom: ${border.variant1};\r\n    background-color: white;\r\n    font-size: 0.9em;\r\n    position: relative;\r\n\r\n    ${({ compact }) =>\r\n        compact\r\n            ? `\r\n        border-left: none;\r\n        border-right: none;\r\n        border-radius: 0;\r\n        margin: 25px 0 0;\r\n        padding: 27px 24px 33px;\r\n    `\r\n            : `\r\n        border-left: ${border.variant1};\r\n        border-right: ${border.variant1};\r\n        border-radius: ${border.radius.variant1};\r\n        margin: 25px 96px 0;\r\n        padding: 27px 37px 33px;\r\n    `}\r\n\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 28px;\r\n        height: 28px;\r\n        background-color: white;\r\n        border-top: ${border.variant1};\r\n        border-left: ${border.variant1};\r\n        transform: scale(0.7, 1) rotate(45deg);\r\n        top: -16px;\r\n        left: ${({ cursorOffset, compact }) => getTooltipCursorLeft(cursorOffset, compact)};\r\n    }\r\n`;\r\n\r\nconst TooltipTitle = styled.h2<ITooltipTitleProps>`\r\n    font-size: ${({ compact }) => (compact ? \"1.8em\" : \"2.2em\")};\r\n    color: ${color.grey1};\r\n    margin: 0;\r\n`;\r\n\r\nconst TooltipText = styled.div`\r\n    margin: 5px 0 0;\r\n    font-size: 1.6em;\r\n    color: ${color.grey2};\r\n    line-height: 1.5em;\r\n`;\r\n\r\nconst BuildVariants: React.FC<IProps> = ({ compact }) => {\r\n    const [variant, setVariant] = useState<BuildVariant>(BuildVariant.variant1);\r\n\r\n    const getCursorOffsetByVariant = (variant: BuildVariant): number => {\r\n        switch (variant) {\r\n            case BuildVariant.variant1:\r\n                return 0;\r\n\r\n            case BuildVariant.variant2:\r\n                return 1;\r\n\r\n            case BuildVariant.variant3:\r\n                return 2;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Block>\r\n            <Variants compact={compact}>\r\n                <Variant\r\n                    id=\"build-variant-1\"\r\n                    name=\"build-variant\"\r\n                    value={BuildVariant.variant1}\r\n                    checked={variant === BuildVariant.variant1}\r\n                    compact={compact}\r\n                    onChange={setVariant}\r\n                >\r\n                    Standard\r\n                </Variant>\r\n                <Variant\r\n                    id=\"build-variant-2\"\r\n                    name=\"build-variant\"\r\n                    value={BuildVariant.variant2}\r\n                    checked={variant === BuildVariant.variant2}\r\n                    compact={compact}\r\n                    onChange={setVariant}\r\n                >\r\n                    Upgraded\r\n                </Variant>\r\n                <Variant\r\n                    id=\"build-variant-3\"\r\n                    name=\"build-variant\"\r\n                    value={BuildVariant.variant3}\r\n                    checked={variant === BuildVariant.variant3}\r\n                    compact={compact}\r\n                    onChange={setVariant}\r\n                >\r\n                    Custom\r\n                </Variant>\r\n            </Variants>\r\n            <Tooltip\r\n                compact={compact}\r\n                cursorOffset={getCursorOffsetByVariant(variant)}\r\n            >\r\n                <TooltipTitle compact={compact}>\r\n                    None or very minor updates\r\n                </TooltipTitle>\r\n                <TooltipText>\r\n                    Examples include: Carpet or vinyl flooring, vinyl blinds,\r\n                    builder`s grade cabinets, laminate countertops, basic\r\n                    fixtures, etc...\r\n                </TooltipText>\r\n            </Tooltip>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default BuildVariants;\r\n","import React from \"react\";\r\nimport { color } from \"../styles/constants\";\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    theme?: \"default\" | \"blue\";\r\n}\r\n\r\nconst BuildIcon: React.FC<IProps> = ({ className, theme = \"default\" }) => {\r\n    return (\r\n        <svg\r\n            className={className}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            version=\"1.1\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n            viewBox=\"0 70 640 470\"\r\n            width=\"1em\"\r\n            height=\"0.7em\"\r\n            stroke={theme === \"blue\" ? color.grey1 : color.grey3}\r\n        >\r\n            <g strokeWidth=\"9px\">\r\n                <path\r\n                    d=\"M174.56 79.72L455.71 79.72L636.06 313.5L349.62 313.5L174.56 79.72Z\"\r\n                    opacity=\"1\"\r\n                    fill={theme === \"blue\" ? color.blue1 : color.grey3}\r\n                    fillOpacity=\"1\"\r\n                    stroke={theme === \"blue\" ? color.blue1 : color.grey3}\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M174.56 79.72L38.73 247\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    stroke={theme === \"blue\" ? color.blue1 : color.grey3}\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M3.06 538.46L52.93 538.46L52.93 273.21L174.56 125.79\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M217.47 255.83L217.47 332.12L164.5 332.12L164.5 255.83L217.47 255.83Z\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M84.71 513.99L150.16 513.99L150.16 387.17L84.71 387.17L84.71 513.99Z\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M52.93 513.99L84.71 513.99\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M326.63 387.17L326.63 487.6L184.44 487.6L184.44 387.17L326.63 387.17Z\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M630.11 538.46L617.65 538.46L52.93 538.46\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M616.4 332.12L616.4 538.46\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n                <path\r\n                    d=\"M351.5 332.12L351.5 538.46\"\r\n                    opacity=\"1\"\r\n                    fillOpacity=\"0\"\r\n                    strokeOpacity=\"1\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default BuildIcon;\r\n","import { useState } from \"react\";\r\nimport { screen } from \"../styles/constants\";\r\n\r\nconst useAdaptive = () => {\r\n    const [isMobile, setIsMobile] = useState(\r\n        window.innerWidth < screen.desktop\r\n    );\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n        if (!isMobile && window.innerWidth < screen.desktop) {\r\n            setIsMobile(true);\r\n        }\r\n\r\n        if (isMobile && window.innerWidth >= screen.desktop) {\r\n            setIsMobile(false);\r\n        }\r\n    });\r\n\r\n    return { isMobile };\r\n};\r\n\r\nexport default useAdaptive;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { border, color } from \"../styles/constants\";\r\n\r\ninterface IProps {\r\n    type: 'submit' | 'reset';\r\n    icon?: 'check';\r\n    theme?: \"default\" | \"primary\";\r\n    compact?: boolean;\r\n}\r\n\r\nconst Block = styled.button<IProps>`\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    white-space: nowrap;\r\n\r\n    ${({ theme }) => theme === \"primary\" ? `\r\n        border: ${border.variant4};\r\n        background-color: ${color.blue1};\r\n        color: white;\r\n    ` : `\r\n        border: ${border.variant3};\r\n        background-color: white;\r\n        color: ${color.grey2};\r\n    `}\r\n\r\n    ${({ compact }) => compact ? `\r\n        width: 250px;\r\n        height: 66px;\r\n        line-height: 64px;\r\n        font-size: 1.4em;\r\n    ` : `\r\n        width: 372px;\r\n        height: 74px;\r\n        line-height: 72px;\r\n        font-size: 1.6em;\r\n    `}\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst Button: React.FC<IProps> = ({ theme = \"default\", icon, children, ...tail }) => {\r\n    return (\r\n        <Block theme={theme} {...tail}>\r\n            {icon && <Icon><FontAwesomeIcon icon={icon} /></Icon>}\r\n            {children}\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BuildCost from \"./components/BuildCost\";\nimport BuildVariants from \"./components/BuildVariants\";\nimport useAdaptive from \"./hooks/useAdaptive\";\nimport { border, color, mediaQuery, screen, shadow } from \"./styles/constants\";\nimport Button from \"./ui-kit/Button\";\n\nconst Form = styled.form`\n    border-radius: 20px;\n    overflow-x: hidden;\n    box-shadow: ${shadow.variant1};\n\n    ${mediaQuery.desktop} {\n        width: ${screen.desktop}px;\n        margin: 70px auto;\n    }\n\n    ${mediaQuery.mobile} {\n        width: ${screen.mobile}px;\n        margin: 20px auto;\n    }\n`;\n\nconst Content = styled.div`\n    padding: 55px 96px 25px;\n    background-color: ${color.milk1};\n    font-size: 0.91em;\n\n    ${mediaQuery.mobile} {\n        padding: 55px 24px 12px;\n    }\n`;\n\nconst Title = styled.h1`\n    font-size: 2.2em;\n    color: ${color.grey1};\n    margin: 0;\n    line-height: 25px;\n\n    ${mediaQuery.mobile} {\n        line-height: 23px;\n    }\n`;\n\nconst SubTitle = styled.h2`\n    font-size: 1.6em;\n    font-weight: 500;\n    color: ${color.grey2};\n    margin: 20px 0 40px;\n`;\n\nconst Variants = styled.div`\n    margin: 0 -96px;\n\n    ${mediaQuery.mobile} {\n        margin: 0 -24px;\n    }\n`;\n\nconst Footer = styled.footer`\n    padding: 66px 96px 40px;\n    background-color: white;\n    border-top: ${border.variant1};\n\n    ${mediaQuery.mobile} {\n        padding: 44px 24px 20px;\n    }\n`;\n\nconst Actions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin: 60px 0 0;\n\n    ${mediaQuery.mobile} {\n        margin: 44px 0 0;\n    }\n`;\n\nconst App: React.FC = () => {\n    const { isMobile } = useAdaptive();\n\n    return (\n        <Form>\n            <Content>\n                <Title>Estimate your rebuild cost!</Title>\n                <SubTitle>Just tell us about your home`s features.</SubTitle>\n                <Variants>\n                    <BuildVariants compact={isMobile} />\n                </Variants>\n            </Content>\n            <Footer>\n                <BuildCost compact={isMobile} />\n                <Actions>\n                    <Button type=\"reset\" compact={isMobile}>\n                        Cancel\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        theme=\"primary\"\n                        icon=\"check\"\n                        compact={isMobile}\n                    >\n                        Use estimate\n                    </Button>\n                </Actions>\n            </Footer>\n        </Form>\n    );\n};\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faInfo, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faInfo, faCheck)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './setupIcons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}